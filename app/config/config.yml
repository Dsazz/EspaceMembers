imports:
    - { resource: parameters.yml }
    - { resource: @ApplicationSonataUserBundle/Resources/config/services.yml }
    - { resource: @EspaceMembersMainBundle/Resources/config/services.yml }
    - { resource: @EspaceMembersSecurityBundle/Resources/config/services.yml }
    - { resource: security.yml }

framework:
    #esi:             ~
    translator:      { fallback: "%locale%" }
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    #validation:      { enable_annotations: true }
    validation:      { enabled: true, enable_annotations: false }
    templating:
        engines: ['twig']
        #assets_version: SomeVersionScheme
    default_locale:  "%locale%"
    trusted_hosts:   ~
    trusted_proxies: ~
    session:
        # handler_id set to null will use default session handler from php.ini
        handler_id:  ~
    fragments:       ~
    http_method_override: true

sensio_framework_extra:
    request:
        converters: true
        auto_convert: true

# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"

# Assetic Configuration
assetic:
    debug:          "%kernel.debug%"
    use_controller: false
    bundles:        [EspaceMembersMainBundle]
    #java: /usr/bin/java
    filters:
        cssrewrite: ~
        #closure:
        #    jar: "%kernel.root_dir%/Resources/java/compiler.jar"
        #yui_css:
        #    jar: "%kernel.root_dir%/Resources/java/yuicompressor-2.4.7.jar"

# Doctrine Configuration
doctrine:
    dbal:
        driver:   "%database_driver%"
        host:     "%database_host%"
        port:     "%database_port%"
        dbname:   "%database_name%"
        user:     "%database_user%"
        password: "%database_password%"
        charset:  UTF8
        mapping_types:
            enum: string
        # if using pdo_sqlite as your database driver, add the path in parameters.yml
        # e.g. database_path: "%kernel.root_dir%/data/data.db3"
        # path:     "%database_path%"
        types:
            json: Sonata\Doctrine\Types\JsonType
            SexType: EspaceMembers\MainBundle\DBAL\Types\SexType
    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        entity_managers:
            default:
                metadata_cache_driver: apc
                query_cache_driver: apc
                result_cache_driver: apc
                mappings:
                    ApplicationSonataMediaBundle: ~
                    SonataMediaBundle: ~
                    FOSUserBundle: ~
                    EspaceMembersMainBundle: ~
                    #ApplicationSonataUserBundle: ~
                    SonataUserBundle: ~

# Swiftmailer Configuration
swiftmailer:
    transport: "%mailer_transport%"
    host:      "%mailer_host%"
    username:  "%mailer_user%"
    password:  "%mailer_password%"
    spool:     { type: memory }

#FOSUserBundle configuration for SonataAdmin
fos_user:
    db_driver: orm
    firewall_name: main
    user_class: EspaceMembers\MainBundle\Entity\User #Override Sonata\UserBundle\Entity\BaseUser
    group:
        group_class:   EspaceMembers\MainBundle\Entity\Group
        group_manager: sonata.user.orm.group_manager
    service:
        user_manager: sonata.user.orm.user_manager
    #profile:
        #form:
            #type:               fos_user_profile
            #handler:            fos_user.profile.form.handler.default
            #name:               fos_user_profile_form
            #validation_groups:  [Authentication]

# Sonata configurations
#sonata_user:
    #security_acl: true
    #manager_type: orm

sonata_user:
    security_acl:     false
    class:
        user: EspaceMembers\MainBundle\Entity\User #Override Sonata\UserBundle\Entity\BaseUser
        group:   EspaceMembers\MainBundle\Entity\Group
        #group:   Sonata\UserBundle\Entity\BaseGroup

    admin:
        user:
            #class:          Sonata\UserBundle\Admin\Entity\UserAdmin
            class:          EspaceMembers\MainBundle\Admin\UserAdmin
            controller:     SonataAdminBundle:CRUD
            translation:    SonataUserBundle

        group:
            #class:          Sonata\UserBundle\Admin\Entity\GroupAdmin
            class:          EspaceMembers\MainBundle\Admin\GroupAdmin
            controller:     SonataAdminBundle:CRUD
            translation:    SonataUserBundle

    profile:  # Profile Form (firstname, lastname, etc ...)
        form:
            type:               espacemembers_user_profile
            handler:            sonata.user.profile.form.handler.default
            #handler:            espacemembers.user.profile.form.handler.default
            name:               espacemembers_user_profile_form
            #validation_groups:  [Profile]
        register:
            form:
                type:                 sonata_user_registration
                handler:              sonata.user.registration.form.handler.default
                name:                 sonata_user_registration_form
                validation_groups:
                    - Registration
                    - Default
            confirm:
                redirect:
                    route: 'espace_members_teaching'
                    route_parameters: ~
        menu:
            - { route: 'sonata_user_profile_edit', label: 'link_edit_profile', domain: 'SonataUserBundle'}
            - { route: 'sonata_user_profile_edit_authentication', label: 'link_edit_authentication', domain: 'SonataUserBundle'}

sonata_admin:
    title: EspaceMembers
    security:
        handler: sonata.admin.security.handler.role
    templates:
        layout:  EspaceMembersMainBundle::sonata_admin_base_layout.html.twig
        search:              SonataAdminBundle:Core:search.html.twig
        search_result_block: SonataAdminBundle:Block:block_search_result.html.twig
    dashboard:
        groups:
            EspaceMembers: ~
            user:
                label: Users management
                items:
                    - sonata.user.admin.user

sonata_block:
    default_contexts: [cms]
    blocks:
        sonata.user.block.menu:
        sonata.user.block.account:
        sonata.block.service.text:
        sonata.admin.block.admin_list:
            contexts:   [admin]
        sonata.admin.block.search_result:
            contexts: [admin]

sonata_media:
    providers:
        file:
            allowed_extensions: ['pdf', 'mp4', 'flv', 'mp3', 'avi']
            allowed_mime_types: ['video/mp4', 'video/x-flv', 'audio/mpeg', 'application/pdf', 'application/pdf', 'application/x-pdf', 'application/acrobat', 'applications/vnd.pdf', 'text/pdf', 'text/x-pdf', 'application/x-troff-msvideo', 'video/avi', 'applicationvideo/msvideo', 'video/x-msvideo' ]
        image:
            resizer:  sonata.media.resizer.square
            allowed_extensions: ['jpg', 'png', 'gif', 'jpeg']
            allowed_mime_types: ['image/pjpeg','image/jpeg','image/png','image/x-png', 'image/gif']
    default_context: default
    db_driver: doctrine_orm # or doctrine_mongodb, doctrine_phpcr
    contexts:
        default:  # the default context is mandatory
            providers:
                - sonata.media.provider.dailymotion
                - sonata.media.provider.youtube
                - sonata.media.provider.image
                - sonata.media.provider.file
            formats:
                small: { width: 100 , quality: 70}
                #big:   { width: 500 , quality: 70}
        lesson:
            #download:
                #strategy: sonata.media.security.superadmin_strategy
                #mode: http
            providers:
                - sonata.media.provider.file
            formats:
                mp3:   { quality: 100 }
                video: { quality: 100 }
        flayer:
            download:
                strategy: sonata.media.security.superadmin_strategy
                mode: http
            providers:
                - sonata.media.provider.file
            formats:
                pdf: { quality: 100 }
        cover:
            download:
                strategy: sonata.media.security.superadmin_strategy
                mode: http
            providers:
                - sonata.media.provider.image
            formats:
                small: { width: 50, height: 50, quality: 100 }
                big:   { width: 175, height: 175, quality: 100 }
        avatar:
            providers:
                - sonata.media.provider.image
            formats:
                very_small: { width: 25, height: 25,  quality: 100 }
                small:   { width: 30, height: 30, quality: 100 }
                big:     { width: 175, height: 175, quality: 100 }
    cdn:
        server:
            path: /uploads/media # http://media.sonata-project.org/

    filesystem:
        local:
            directory:  %kernel.root_dir%/../web/uploads/media
            create:     false

    class:
        media:  EspaceMembers\MainBundle\Entity\Media
